<?php
// $Id$

/**
 * @file
 * Contains necessary hook implementations, callbacks & helpers.
 */

// TODO: @farhang: Implement hook_help().



/**
 * Implements hook_init().
 */
function inbound_checker_init() {
  drupal_add_css(drupal_get_path('module', 'inbound_checker') .'/css/style.css');
  return '';
}

/**
 * Implements hook_perm().
 */
function inbound_checker_perm() {
  return array('administer inbound cheker');
}

/**
 * Implements hook_menu().
 */
function inbound_checker_menu() {
  $items = array();
  // Inbound links listing page.
  $items['admin/reports/inbound-links'] =
  $items['admin/reports/inbound-links/sites'] = array(
    'title' => 'Inbound Links',
    'description' => 'A report of website inbound links.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('inbound_checker_form_list'),
    'access arguments' => array('administer inbound cheker'),
    'file' => 'inbound_checker.inc',
    'type' => MENU_NORMAL_ITEM,
    'weight' => 1,
  );
  $items['admin/reports/inbound-links/sites']['type'] = MENU_DEFAULT_LOCAL_TASK;
  // Inbound links addition form.
  $items['admin/reports/inbound-links/add'] = array(
    'title' => 'Add site',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('inbound_checker_form'),
    'access arguments' => array('administer inbound cheker'),
    'file' => 'inbound_checker.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );
  // Site entry edit.
  $items['admin/reports/inbound-links/%inbound_checker/edit'] = array(
    'title' => 'Edit site entry',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('inbound_checker_form', 3),
    'access arguments' => array('administer inbound cheker'),
    'file' => 'inbound_checker.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 3,
  );
  // Settings form.
  $items['admin/reports/inbound-links/settings'] = array(
    'title' => 'Settings',
    'description' => 'Inbound link checker configuration settings.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('inbound_checker_form_settings'),
    'access arguments' => array('administer inbound cheker'),
    'file' => 'inbound_checker.inc',
    'type' => MENU_LOCAL_TASK,
    'weight' => 4,
  );

  return $items;
}

/**
 * Implementation of hook_cron().
 */
function inbound_checker_cron() {
  // TODO: @sepehr: Breakout the logic into a separate API function.
  inbound_checker_form_list_submit($form, &$form_state);
}

/**
 * Submission callback for sites list form.
 */
function inbound_checker_form_list_submit($form, &$form_state) {
  // TODO: @sepehr: Check the logic.
  // FIX: @farhang: When zero links checkbox is checked, nothing will happen through the batch process.
  // FIX: @farhang: Google/Alexa pageranks calculation failure.
  $batch = array(
    'operations' => array(),
    'title' => t('Inbound Links Checking...'),
    'init_message' => t('Initializing inbound link checking...'),
    'error_message' => t('An error occured while checking inbound links.'),
    'progress_message' => t('@current out of @total links has been checked, @remaining remaining. (@percentage%)'),
  );

  // TODO: @sepehr: Use module's API.
  $results = db_query("SELECT * FROM {inbound_checker}");


  while ($result = db_fetch_object($results)) {
    if ($form_state['values']['inbound_checker_check_zeros']) {
      if ($result->count == 0) {
        $batch['operations'][] = array('_inbound_checker_getlinks_batch', array($result));
      }
    }
    else {
      $batch['operations'][] = array('_inbound_checker_getlinks_batch', array($result));
    }
  }
  batch_set($batch);
}

/**
 * Helper function to save a linker website info.
 *
 * @param $link
 *   Site link object.
 *
 * @see drupal_write_record()
 */
function _inbound_checker_site_save($link) {
  $update = isset($link->icid) ? 'icid' : array();
  drupal_write_record('inbound_checker', $link, $update);
}

/**
 * Batch processing helper.
 *
 * @param $result
 *   Site info object.
 *
 * @todo Rename!!
 */
function _inbound_checker_getlinks_batch($result) {
  // TODO: @sepehr: Check the logic.
  // TODO: @farhang: Provide the option to fetch contents using CURL.
  static $loaded = FALSE;
  if (!$loaded) {
    module_load_include('inc', 'sitestats');
    $loaded = TRUE;
  }

  $sitecontent = file_get_contents($result->site_address);
  // Get all page ranks.
  $all_pr = sitestats_getstats($result->site_address);
  $count = substr_count($sitecontent, variable_get('inbound_checker_keyword', ''));
  db_query("UPDATE {inbound_checker} SET count = %d, alexa_pr = '%s', google_pr = %d, site_age = '%s' WHERE site_address = '%s'", array(
    $count,
    $all_pr['alexa_rank'],
    $all_pr['pr_1'],
    $all_pr['age'],
    $result->site_address,
    )
  );
}

/**
 * Inbound link load helper.
 *
 * @param $icid
 *   Inbound checker record identidier to load.
 *
 * @return
 *   Loaded object or FALSE on fail.
 */
function inbound_checker_load($icid) {
  // TODO: @sepehr: Wrap as module API.
  $results = db_query ("SELECT * from {inbound_checker} where icid = %d" , $icid);
  return db_fetch_object($results);
}

