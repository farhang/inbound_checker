<?php
// $Id$

/**
 * @file
 * Contains necessary hook implementations, callbacks & helpers.
 */

/**
 * Implements hook_perm().
 */
function inbound_checker_perm() {
  return array(
    'administer inbound cheker',
  );
}

/**
 * Implements hook_menu().
 */
function inbound_checker_menu() {
  $items = array();

  $items['admin/reports/inbound-links'] =
  $items['admin/reports/inbound-links/sites'] = array(
    'title' => 'Site reports',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('inbound_checker_form_submit_site'),
    'access callback' => 'user_access',
    'access arguments' => array('administer inbound cheker'),
    'type' => MENU_NORMAL_ITEM,
    'weight' => 1,
  );

  $items['admin/reports/inbound-links/sites']['type'] = MENU_DEFAULT_LOCAL_TASK;

  $items['admin/reports/inbound-links/settings'] = array(
    'title' => 'Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('inbound_checker_settings'),
    'access arguments' => array('administer inbound cheker'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );



  return $items;
}

/**
 * Generates a inbound ad settings page
 **/
function inbound_checker_settings() {
 $form = array();

 $form['inbound_checker_keyword'] = array(
    '#type' => 'textfield',
    '#default_value' => variable_get('inbound_checker_keyword', ''),
    '#title' => t('keyword'),
    '#description' => t('e.g.â€Œ www.example.com'),
    '#required' => TRUE,
  );
  return system_settings_form($form);
}


/**
 * Generates a form for get the address of the websites
 **/
function inbound_checker_form_submit_site() {
  $form = array();

  $form['#prefix'] = _inbound_checker_sites_table();

  $form['website_address'] = array(
    '#type' => 'textfield',
    '#title' => t('Website address'),
    '#description' => t('example:â€Œ http://www.minyatoor.com'),
    '#required' => TRUE,
  );

  $form['website_name'] = array(
    '#type' => 'textfield',
    '#title' => t('Website name'),
    '#required' => TRUE,
  );

  $form['op'] = array(
    '#type' => 'submit',
    '#value' => 'Check and add',
  );

  return $form;
}

function inbound_checker_form_submit_site_validate($form, &$form_state) {
  if (isset($form_state['values']['website_address']))
    if(!preg_match('|^http(s)?://[a-z0-9-]+(.[a-z0-9-]+)*(:[0-9]+)?(/.*)?$|i', $form_state['values']['website_address'])) {
        form_set_error($form_state['values']['website_address'], t('Please enter the valid url.'));
    }
}

function inbound_checker_form_submit_site_submit($form, &$form_state) {
  $sitecontent = file_get_contents($form_state['values']['website_address']);
  $link_num = substr_count($sitecontent, variable_get('inbound_checker_keyword', ''));
  db_query("INSERT INTO {inbound_checker} (site_address, site_name, link_num) VALUES ('%s', '%s', %d)", array(
    $form_state['values']['website_address'],
    $form_state['values']['website_name'],
    $link_num,
  ));
  drupal_set_message(t('Entry has been created.'));

}

function _inbound_checker_sites_table() {
  $rows = array();
  $header = array(
    t('id'),
    t('Site name'),
    t('Site address'),
  );

  $results = db_query("SELECT * FROM {inbound_checker}");
  while ($result = db_fetch_object($results)) {
    $rows[] = array(
      $result->id,
      $result->site_name,
      $result->site_address,
    );
  }

  return theme('table', $header, $rows);
}

